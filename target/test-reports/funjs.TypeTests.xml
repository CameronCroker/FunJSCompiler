<?xml version='1.0' encoding='UTF-8'?>
<testsuite hostname="Cameron-PC" name="funjs.TypeTests" tests="48" errors="0" failures="0" time="0.236">
                     <properties>
      <property name="jline.esc.timeout" value="0"/><property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/><property name="sun.boot.library.path" value="C:\Program Files\Java\jre1.8.0_101\bin"/><property name="java.vm.version" value="25.101-b13"/><property name="java.vm.vendor" value="Oracle Corporation"/><property name="java.vendor.url" value="http://java.oracle.com/"/><property name="path.separator" value=";"/><property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/><property name="file.encoding.pkg" value="sun.io"/><property name="user.country" value="AU"/><property name="user.script" value=""/><property name="sun.java.launcher" value="SUN_STANDARD"/><property name="sun.os.patch.level" value=""/><property name="java.vm.specification.name" value="Java Virtual Machine Specification"/><property name="user.dir" value="C:\Users\cameron\Downloads\funjs (4)\funjs"/><property name="java.runtime.version" value="1.8.0_101-b13"/><property name="java.awt.graphicsenv" value="sun.awt.Win32GraphicsEnvironment"/><property name="java.endorsed.dirs" value="C:\Program Files\Java\jre1.8.0_101\lib\endorsed"/><property name="os.arch" value="amd64"/><property name="java.io.tmpdir" value="C:\Users\cameron\AppData\Local\Temp\"/><property name="line.separator" value="
"/><property name="java.vm.specification.vendor" value="Oracle Corporation"/><property name="user.variant" value=""/><property name="os.name" value="Windows 10"/><property name="sun.jnu.encoding" value="Cp1252"/><property name="java.library.path" value="C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\TortoiseHg\;C:\Program Files (x86)\Skype\Phone\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\GTK2-Runtime\bin;C:\Program Files (x86)\sbt\\bin;%USERPROFILE%\.dnx\bin;C:\Program Files\Microsoft DNX\Dnvm\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\MATLAB\R2016a\runtime\win64;C:\Program Files\MATLAB\R2016a\bin;C:\Program Files\MATLAB\R2016a\polyspace\bin;C:\Users\cameron\AppData\Local\Microsoft\WindowsApps;."/><property name="java.specification.name" value="Java Platform API Specification"/><property name="java.class.version" value="52.0"/><property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/><property name="os.version" value="10.0"/><property name="user.home" value="C:\Users\cameron"/><property name="user.timezone" value="Australia/Sydney"/><property name="java.awt.printerjob" value="sun.awt.windows.WPrinterJob"/><property name="file.encoding" value="Cp1252"/><property name="java.specification.version" value="1.8"/><property name="sbt.log.format" value="true"/><property name="java.class.path" value="C:\Program Files (x86)\sbt\bin\sbt-launch.jar"/><property name="user.name" value="cameron"/><property name="jline.shutdownhook" value="false"/><property name="java.vm.specification.version" value="1.8"/><property name="sun.java.command" value="xsbt.boot.Boot"/><property name="java.home" value="C:\Program Files\Java\jre1.8.0_101"/><property name="sun.arch.data.model" value="64"/><property name="user.language" value="en"/><property name="java.specification.vendor" value="Oracle Corporation"/><property name="awt.toolkit" value="sun.awt.windows.WToolkit"/><property name="java.vm.info" value="mixed mode"/><property name="java.version" value="1.8.0_101"/><property name="java.ext.dirs" value="C:\Program Files\Java\jre1.8.0_101\lib\ext;C:\WINDOWS\Sun\Java\lib\ext"/><property name="sun.boot.class.path" value="C:\Program Files\Java\jre1.8.0_101\lib\resources.jar;C:\Program Files\Java\jre1.8.0_101\lib\rt.jar;C:\Program Files\Java\jre1.8.0_101\lib\sunrsasign.jar;C:\Program Files\Java\jre1.8.0_101\lib\jsse.jar;C:\Program Files\Java\jre1.8.0_101\lib\jce.jar;C:\Program Files\Java\jre1.8.0_101\lib\charsets.jar;C:\Program Files\Java\jre1.8.0_101\lib\jfr.jar;C:\Program Files\Java\jre1.8.0_101\classes"/><property name="java.vendor" value="Oracle Corporation"/><property name="sun.stderr.encoding" value="cp850"/><property name="file.separator" value="\"/><property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/><property name="sun.io.unicode.encoding" value="UnicodeLittle"/><property name="sun.cpu.endian" value="little"/><property name="sun.stdout.encoding" value="cp850"/><property name="sun.desktop" value="windows"/><property name="sun.cpu.isalist" value="amd64"/>
    </properties>
                     <testcase classname="funjs.TypeTests" name="a number expression is of integer type" time="0.118">
                                                 
                                               </testcase><testcase classname="funjs.TypeTests" name="true is of Boolean type" time="0.001">
                                                 
                                               </testcase><testcase classname="funjs.TypeTests" name="false is of Boolean type" time="0.001">
                                                 
                                               </testcase><testcase classname="funjs.TypeTests" name="a name that is not defined is of unknown type" time="0.002">
                                                 
                                               </testcase><testcase classname="funjs.TypeTests" name="a block's type is the type of its final expression (val)" time="0.024">
                                                 
                                               </testcase><testcase classname="funjs.TypeTests" name="a block's type is the type of its final expression" time="0.009">
                                                 
                                               </testcase><testcase classname="funjs.TypeTests" name="a primitive addition is of integer type" time="0.004">
                                                 
                                               </testcase><testcase classname="funjs.TypeTests" name="a primitive divide is of integer type" time="0.003">
                                                 
                                               </testcase><testcase classname="funjs.TypeTests" name="a primitive multiplication is of integer type" time="0.003">
                                                 
                                               </testcase><testcase classname="funjs.TypeTests" name="a primitive subtraction is of integer type" time="0.001">
                                                 
                                               </testcase><testcase classname="funjs.TypeTests" name="a primitive less than is of Boolean type" time="0.001">
                                                 
                                               </testcase><testcase classname="funjs.TypeTests" name="a primitive equality of integers is of Boolean type" time="0.001">
                                                 
                                               </testcase><testcase classname="funjs.TypeTests" name="the type of a fun application is the fun result type" time="0.003">
                                                 
                                               </testcase><testcase classname="funjs.TypeTests" name="a conditional expression's type is the type of its first branch - Int" time="0.003">
                                                 
                                               </testcase><testcase classname="funjs.TypeTests" name="a conditional expression's type is the type of its first branch - Bool" time="0.001">
                                                 
                                               </testcase><testcase classname="funjs.TypeTests" name="a conditional expression's type is the type of its first branch - Fun" time="0.003">
                                                 
                                               </testcase><testcase classname="funjs.TypeTests" name="the left argument of an addition can't be a Boolean" time="0.016">
                                                 
                                               </testcase><testcase classname="funjs.TypeTests" name="the right argument of an addition can't be a Boolean" time="0.001">
                                                 
                                               </testcase><testcase classname="funjs.TypeTests" name="the left argument of a division can't be a Boolean" time="0.001">
                                                 
                                               </testcase><testcase classname="funjs.TypeTests" name="the right argument of a division can't be a Boolean" time="0.001">
                                                 
                                               </testcase><testcase classname="funjs.TypeTests" name="the left argument of a multiplication can't be a Boolean" time="0.001">
                                                 
                                               </testcase><testcase classname="funjs.TypeTests" name="the right argument of a multiplication can't be a Boolean" time="0.001">
                                                 
                                               </testcase><testcase classname="funjs.TypeTests" name="the left argument of a subtraction can't be a Boolean" time="0.0">
                                                 
                                               </testcase><testcase classname="funjs.TypeTests" name="the right argument of a subtraction can't be a Boolean" time="0.001">
                                                 
                                               </testcase><testcase classname="funjs.TypeTests" name="the left argument of an equality than can't be a Boolean" time="0.001">
                                                 
                                               </testcase><testcase classname="funjs.TypeTests" name="the right argument of a equality can't be a Boolean" time="0.001">
                                                 
                                               </testcase><testcase classname="funjs.TypeTests" name="cannot test equality of two Booleans" time="0.0">
                                                 
                                               </testcase><testcase classname="funjs.TypeTests" name="the left argument of a less than can't be a Boolean" time="0.001">
                                                 
                                               </testcase><testcase classname="funjs.TypeTests" name="the right argument of a less than can't be a Boolean" time="0.001">
                                                 
                                               </testcase><testcase classname="funjs.TypeTests" name="the tested expression in a conditional can't be an integer" time="0.001">
                                                 
                                               </testcase><testcase classname="funjs.TypeTests" name="the else expression in a conditional must have the same type as the then expression" time="0.001">
                                                 
                                               </testcase><testcase classname="funjs.TypeTests" name="an applied expression must be a function" time="0.001">
                                                 
                                               </testcase><testcase classname="funjs.TypeTests" name="the arguments in a fun application must match the function" time="0.002">
                                                 
                                               </testcase><testcase classname="funjs.TypeTests" name="comparing funtype against int inside IF" time="0.002">
                                                 
                                               </testcase><testcase classname="funjs.TypeTests" name="comparing two different funtypes inside IF" time="0.006">
                                                 
                                               </testcase><testcase classname="funjs.TypeTests" name="comparing two identical funtypes inside IF" time="0.003">
                                                 
                                               </testcase><testcase classname="funjs.TypeTests" name="declaring the same thing twice is an error" time="0.001">
                                                 
                                               </testcase><testcase classname="funjs.TypeTests" name="backwards references do now work" time="0.001">
                                                 
                                               </testcase><testcase classname="funjs.TypeTests" name="even with the recursion restrictions you can nest lets to get what you want" time="0.002">
                                                 
                                               </testcase><testcase classname="funjs.TypeTests" name="pulling a variable from outside and using at the right type" time="0.002">
                                                 
                                               </testcase><testcase classname="funjs.TypeTests" name="basic object" time="0.001">
                                                 
                                               </testcase><testcase classname="funjs.TypeTests" name="basic object dereference" time="0.002">
                                                 
                                               </testcase><testcase classname="funjs.TypeTests" name="object dereference that was failing in exec tests" time="0.001">
                                                 
                                               </testcase><testcase classname="funjs.TypeTests" name="another basic object" time="0.0">
                                                 
                                               </testcase><testcase classname="funjs.TypeTests" name="a bug I am pulling apart from exec tests" time="0.001">
                                                 
                                               </testcase><testcase classname="funjs.TypeTests" name="comparing two different funypes" time="0.001">
                                                 
                                               </testcase><testcase classname="funjs.TypeTests" name="comparing two different funypes (longer)" time="0.001">
                                                 
                                               </testcase><testcase classname="funjs.TypeTests" name="types of parts must be correct" time="0.003">
                                                 
                                               </testcase>
                     <system-out></system-out>
                     <system-err></system-err>
                   </testsuite>